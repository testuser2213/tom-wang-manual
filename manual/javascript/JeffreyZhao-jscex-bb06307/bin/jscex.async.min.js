Jscex.Async={};Jscex.Async.Task=function(a){this.b=a;this.a=[];this.status="ready"};
Jscex.Async.Task.prototype={start:function(){if(this.status!="ready")throw'Task can only be started in "ready" status.';var a=this;this.status="running";this.b.onStart(function(b,h){if(a.status!="running")throw'Callback can only be used in "running" status.';if(b=="success")a.result=h,a.status="succeeded";else if(b=="failure")a.error=h,a.status="failed";else if(b=="cancel")a.status="canceled";else throw"Unsupported type: "+b;var i=a.a;delete a.a;for(var c=0;c<i.length;c++)try{i[c](a)}catch(f){}})},
addListener:function(a){if(!this.a)throw'Listeners can only be added in "ready" or "running" status.';this.a.push(a)}};
(function(){function a(){}a.prototype={};for(var b in Jscex.d)a.prototype[b]=Jscex.d[b];Jscex.builders.async=new a;b=Jscex.Async;b.sleep=function(a){var b;return new Jscex.Async.Task({onStart:function(c){b=setTimeout(function(){c("success")},a)},onCancel:function(){clearTimeout(b)}})};b.onEvent=function(a,b){var c="on"+b;return new Jscex.Async.Task({onStart:function(b){a[c]=function(d){a[c]=null;b("success",d)}},onCancel:function(){a[c]=null}})};b.parallel=function(a){return new Jscex.Async.Task({onStart:function(b){function c(a){if(!g)if(a.status==
"failed")g=!0,b("failure",{e:a});else if(a.status=="succeeded")j[a.c]=a.result,k--,k==0&&(g=!0,b("success",j))}for(var f=[],d=0;d<a.length;d++){var e=a[d];e.c=d;f.push(e)}var g=!1,k=f.length,j=[];for(d=0;d<f.length;d++)switch(e=f[d],e.status){case "failed":case "succeeded":c(e);break;case "running":e.addListener(c);break;case "ready":e.addListener(c),e.start()}}})}})();
